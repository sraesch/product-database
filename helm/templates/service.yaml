kind: ConfigMap
apiVersion: v1
metadata:
  name: product-db-rest-config
  labels:
    app.kubernetes.io/name: product-db-rest
    app.kubernetes.io/component: config
    app.kubernetes.io/part-of: product-db
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/instance: {{ .Release.Name }}
data:
  service-config: |
    log = "{{ .Values.service.logLevel }}"

    [endpoint]
    address = "0.0.0.0:80"
    allow_origin = "*"

    [postgres]
    host = "product-db-sql-service"
    port = 5432
    dbname = "{{ .Values.db.dbname }}"
    user = "{{ .Values.db.username }}"
    password = "postgres"
    max_connections = 5

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: product-db-rest-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: product-db-rest
      app.kubernetes.io/component: server
      app.kubernetes.io/part-of: product-db
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/version: {{ .Chart.AppVersion }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: product-db-rest
        app.kubernetes.io/component: server
        app.kubernetes.io/part-of: product-db
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: product-db-rest-service
          image: "{{ .Values.image.repository }}/product-service:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
          - name: config
            mountPath: "/etc/product-service"
            readOnly: true
          env:
            - name: PRODUCT_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: product-db-credentials
                  key: db-password
      volumes:
        - name: config
          configMap:
            name: product-db-rest-config
            items:
              - key: service-config
                path: config.toml
---
kind: Service
apiVersion: v1
metadata:
  name: product-db-rest-service
  labels:
    app.kubernetes.io/name: product-db-rest
    app.kubernetes.io/component: server
    app.kubernetes.io/part-of: product-db
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  selector:
    app.kubernetes.io/name: product-db-rest
    app.kubernetes.io/component: server
    app.kubernetes.io/part-of: product-db
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
